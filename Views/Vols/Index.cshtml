@model IEnumerable<GisServerProject.Models.Vol>

@{
    ViewData["Title"] = "Vols - Carte et liste";
}

<h2>@ViewData["Title"]</h2>

<div id="viewDiv" style="height: 600px; width: 100%; margin-bottom: 2rem;"></div>

<form id="searchForm" class="mb-4">
    <div class="row g-2">
        <div class="col">
            <input type="text" class="form-control" name="depart" placeholder="Départ" />
        </div>
        <div class="col">
            <input type="text" class="form-control" name="destination" placeholder="Destination" />
        </div>
        <div class="col">
            <input type="number" class="form-control" name="nbPlacesMin" placeholder="Places min" />
        </div>
        <div class="col">
            <input type="number" class="form-control" name="prixMax" placeholder="Prix max" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Rechercher</button>
        </div>
    </div>
</form>

<!-- Liste des vols -->
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Nom Vol</th>
            <th>Départ</th>
            <th>Destination</th>
            <th>Prix</th>
            <th>Places max</th>
        </tr>
    </thead>
<tbody>
@foreach (var vol in Model)
{
    var coords = vol.Geom?.Coordinates?.Select(c => $"{c.X},{c.Y}").ToArray();
    var coordString = coords != null ? string.Join(";", coords) : "";

    <tr>
        <td>@vol.NomVol</td>
        <td>@vol.Depart</td>
        <td>@vol.Destination</td>
        <td>@vol.Prix €</td>
        <td>@vol.NbPlacesMax</td>
        <td>
            <button class="btn btn-primary btn-sm show-on-map" data-coords="@coordString">
                Afficher sur la carte
            </button>
        </td>
    </tr>
}
</tbody>


</table>



@section Scripts {
    <link rel="stylesheet" href="https://js.arcgis.com/4.29/esri/themes/light/main.css" />
    <script src="https://js.arcgis.com/4.29/"></script>

<script>
    require([
    "esri/Map",
    "esri/views/MapView",
    "esri/layers/GeoJSONLayer",
    "esri/geometry/Polyline",
    "esri/Graphic"
], function (Map, MapView, GeoJSONLayer, Polyline, Graphic) {

    const map = new Map({
        basemap: "streets-navigation-vector"
    });

    const view = new MapView({
        container: "viewDiv",
        map: map,
        center: [-6.85, 33.97],
        zoom: 7
    });

    let geojsonLayer;

    function loadGeoJsonLayer(url) {
        if (geojsonLayer) map.remove(geojsonLayer);
        geojsonLayer = new GeoJSONLayer({ url });
        map.add(geojsonLayer);
    }

    loadGeoJsonLayer("/Vols/GeoJson"); // initial

    // Gérer les clics sur "Afficher sur la carte"
    document.querySelectorAll('.show-on-map').forEach(button => {
        button.addEventListener('click', function () {
            const coordsAttr = this.dataset.coords;
            if (!coordsAttr) return;

            const coordPairs = coordsAttr.split(";").map(pair => {
                const [x, y] = pair.split(",");
                return [parseFloat(x), parseFloat(y)];
            });

            const xSum = coordPairs.reduce((acc, val) => acc + val[0], 0);
            const ySum = coordPairs.reduce((acc, val) => acc + val[1], 0);
            const centerX = xSum / coordPairs.length;
            const centerY = ySum / coordPairs.length;

            view.goTo({
                center: [centerX, centerY],
                zoom: 10
            });

            const polyline = new Polyline({
                paths: [coordPairs],
                spatialReference: { wkid: 4326 }
            });

            const graphic = new Graphic({
                geometry: polyline,
                symbol: {
                    type: "simple-line",
                    color: [255, 0, 0],
                    width: 3
                }
            });

            view.graphics.removeAll();
            view.graphics.add(graphic);
        });
    });

    // Gérer la recherche multicritère
    document.getElementById("searchForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const formData = new FormData(e.target);
        const params = new URLSearchParams(formData).toString();
        const url = "/Vols/FilteredGeoJson?" + params;
        loadGeoJsonLayer(url);
    });

});

</script>


}
